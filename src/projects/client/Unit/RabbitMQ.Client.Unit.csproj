<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Visual Studio generated properties -->
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.21022</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DC9022AA-DC30-4871-AD28-3F166E05DBB5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>properties</AppDesignerFolder>
    <RootNamespace>RabbitMQ.Client.Test</RootNamespace>
    <AssemblyName>unit-tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>build\bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>build\bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- SSL test support, SSL_CERTS_DIR is typically pointed at ../rabbitmq-test/certs (absolute path) -->
  <!-- I'd use the Choose construct for this, but it seems broken on Mono -->
  <PropertyGroup Condition="'$(SSL_CERTS_DIR)' == ''">
    <SSLAvail>false</SSLAvail>
  </PropertyGroup>
  <PropertyGroup Condition="'$(SSL_CERTS_DIR)' != ''">
    <SSLAvail>true</SSLAvail>
    <SSLCertsDir>$(SSL_CERTS_DIR)</SSLCertsDir>
  </PropertyGroup>
  <Target Name="ImportSSL" Condition="$(SSLAvail)">
    <!-- import cacert into certmgr -->
    <!-- <Exec Command="certmgr -c -add -s $(SSLCertsDir)\testca\cacert.cer -r localMachine Root" /> -->
    <Exec Command="certutil -addstore Root $(SSLCertsDir)\testca\cacert.cer" />
  </Target>
  <!-- Decide whether we need to set TEMP under mono -->
  <PropertyGroup>
    <MonoNunitTempSetting Condition="'$(PropUsingMono)' == 'true' and '$(temp)' == ''">temp=/tmp </MonoNunitTempSetting>
  </PropertyGroup>
  <!-- Clean test result file -->
  <Target Name="CleanTestResults">
    <Delete Files="TestResult.xml" />
  </Target>
  <!-- Visual Studio generated reference and file list -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="src\unit\Fixtures.cs" />
    <Compile Include="src\unit\TestAmqpTcpEndpointParsing.cs" />
    <Compile Include="src\unit\TestAmqpUri.cs" />
    <Compile Include="src\unit\TestAuth.cs" />
    <Compile Include="src\unit\TestBasicGet.cs" />
    <Compile Include="src\unit\TestBasicProperties.cs" />
    <Compile Include="src\unit\TestBatchingWorkPool.cs" />
    <Compile Include="src\unit\TestBlockingCell.cs" />
    <Compile Include="src\unit\TestBytesWireFormatting.cs" />
    <Compile Include="src\unit\TestChannelAllocation.cs" />
    <Compile Include="src\unit\TestConfirmSelect.cs" />
    <Compile Include="src\unit\TestConnectionBlocked.cs" />
    <Compile Include="src\unit\TestConnectionChurnHandleLeak.cs" />
    <Compile Include="src\unit\TestConnectionFactory.cs" />
    <Compile Include="src\unit\TestConnectionRecovery.cs" />
    <Compile Include="src\unit\TestConnectionShutdown.cs" />
    <Compile Include="src\unit\TestConnectionWithBackgroundThreads.cs" />
    <Compile Include="src\unit\TestInitialConnection.cs" />
    <Compile Include="src\unit\TestConsumerCancelNotify.cs" />
    <Compile Include="src\unit\TestConsumerCount.cs" />
    <Compile Include="src\unit\TestConsumerExceptions.cs" />
    <Compile Include="src\unit\TestConsumerOperationDispatch.cs" />
    <Compile Include="src\unit\TestContentHeaderCodec.cs" />
    <Compile Include="src\unit\TestEventingConsumer.cs" />
    <Compile Include="src\unit\TestExceptionMessages.cs" />
    <Compile Include="src\unit\TestExchangeDeclare.cs" />
    <Compile Include="src\unit\TestExtensions.cs" />
    <Compile Include="src\unit\TestFieldTableFormatting.cs" />
    <Compile Include="src\unit\TestFieldTableFormattingGeneric.cs" />
    <Compile Include="src\unit\TestFloodPublishing.cs" />
    <Compile Include="src\unit\TestHeartbeats.cs" />
    <Compile Include="src\unit\TestIntAllocator.cs" />
    <Compile Include="src\unit\TestInvalidAck.cs" />
    <Compile Include="src\unit\TestMainLoop.cs" />
    <Compile Include="src\unit\TestMapMessage.cs" />
    <Compile Include="src\unit\TestMessageCount.cs" />
    <Compile Include="src\unit\TestMessagePatternsSubscription.cs" />
    <Compile Include="src\unit\TestMethodArgumentCodec.cs" />
    <Compile Include="src\unit\TestModelShutdown.cs" />
    <Compile Include="src\unit\TestNetworkBinaryCodec.cs" />
    <Compile Include="src\unit\TestNowait.cs" />
    <Compile Include="src\unit\TestPassiveDeclare.cs" />
    <Compile Include="src\unit\TestPropertiesClone.cs" />
    <Compile Include="src\unit\TestPublicationAddress.cs" />
    <Compile Include="src\unit\TestPublisherConfirms.cs" />
    <Compile Include="src\unit\TestQueueDeclare.cs" />
    <Compile Include="src\unit\TestRecoverAfterCancel.cs" />
    <Compile Include="src\unit\TestSharedQueue.cs" />
    <Compile Include="src\unit\TestSsl.cs" />
    <Compile Include="src\unit\TestStreamWireFormatting.cs" />
    <Compile Include="src\unit\TestSubscription.cs" />
    <Compile Include="src\unit\WireFormattingFixture.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\RabbitMQ.Client\RabbitMQ.Client.csproj">
      <Project>{71713FDD-D5EC-40B2-A924-76F80AD57E12}</Project>
      <Name>RabbitMQ.Client</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <!-- Mono compatibility workarounds -->
  <!-- Microsoft CSharp targets -->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- Custom BeforeClean -->
  <Target Name="BeforeClean" DependsOnTargets="CleanTestResults" />
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And $(TargetFrameworkVersion) == 'v3.5'">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\..\packages\NUnit\lib\net35\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v2.0' Or $(TargetFrameworkVersion) == 'v3.0')">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\..\packages\NUnit\lib\net20\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.0')">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\..\packages\NUnit\lib\net40\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2')">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\..\packages\NUnit\lib\net45\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore') Or ($(TargetFrameworkIdentifier) == 'WindowsPhone' And ($(TargetFrameworkVersion) == 'v8.0' Or $(TargetFrameworkVersion) == 'v8.1')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid') Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile31') Or ($(TargetFrameworkProfile) == 'Profile32') Or ($(TargetFrameworkProfile) == 'Profile44') Or ($(TargetFrameworkProfile) == 'Profile49') Or ($(TargetFrameworkProfile) == 'Profile78') Or ($(TargetFrameworkProfile) == 'Profile84') Or ($(TargetFrameworkProfile) == 'Profile111') Or ($(TargetFrameworkProfile) == 'Profile151') Or ($(TargetFrameworkProfile) == 'Profile157') Or ($(TargetFrameworkProfile) == 'Profile259')">
      <ItemGroup>
        <Reference Include="nunit.framework">
          <HintPath>..\..\..\packages\NUnit\lib\portable-net45+win8+wp8+wpa81+Xamarin.Mac+MonoAndroid10+MonoTouch10+Xamarin.iOS10\nunit.framework.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
</Project>